#1.Using joins to Analyze Sales Dealership

#The head of sales at the company would like a list of all customers who bought a car.
#I'll create a query that will return all customer IDs, first names, last names and valid phone numbers of customers who purchased a car.

SELECT c.customer_id, c.first_name, c.last_name, c.phone
FROM sales s 
INNER JOIN customers c ON s.customer_id=c.customer_id
INNER JOIN products p ON s.product_id=p.product_id
WHERE p.product_type='automobile' AND c.phone IS NOT NULL

 

SELECT first_name, last_name, COALESCE(phone, 'NO PHONE') AS phone
FROM customers
ORDER BY 1;

 

#2.Generating an Elite Customer Party Guest List using UNION

#A query that will make a list of the company's customers and company employees
#Who live in Los Angeles, CA. The guest list should contain the first and last name, and whether the guest is a customer or an employee.

(
 SELECT first_name, last_name, 'Customer' AS guest_type
 FROM customers
 WHERE city='Los Angeles' AND state='CA'
)
UNION
(
 SELECT first_name, last_name, 'Employee' as guest_type
 FROM salespeople s
 INNER JOIN dealerships d ON s.dealership_id=d.dealership_id
 WHERE d.city ='Los Angeles' AND d.state = 'CA'
)
 

#3.Using the CASE WHEN Function to Get Regional Lists

#The aim is to create a query that will map various values in a column to other values.

SELECT c.customer_id,
CASE WHEN c.state IN ('MA','NH','VT','ME','CT','RI') THEN 'New England'
WHEN c.state IN ('GA','FL','MS','AL','LA','KY','VA','NC','SC','TN','VI','WV','AR') THEN 'Southeast'
ELSE 'Other' END AS region
FROM customers c
ORDER BY 1;

 



#4.Building a Sales Model Using SQL Techniques

#Clean and prepare the data for analysis using SQL techniques.
#The data science team wants to build a new model to help predict which customers are the best prospects for remarketing.
#A new data scientist has joined their team and does not know the database well enough to pull a dataset for this new model.
#The responsibility has fallen to the data analyst to help the data scientist prepare and build a dataset to be used to train a model.

SELECT c.*,
       p.*,
       COALESCE(s.dealership_id,-1) as dealership_id,
       CASE WHEN (p.base_msrp - s.sales_amount > 500) THEN 1
            ELSE 0 END AS high_savings
FROM sales s 
INNER JOIN customers c ON s.customer_id = c.customer_id
INNER JOIN products p ON p.product_id = s.product_id
LEFT JOIN dealerships d ON s.dealership_id = d.dealership_id;



#5.Using Aggregate Functions to Analyze Data
#Analyze the price of a products using different aggregate functions. 

SELECT product_type, MIN(base_msrp), MAX(base_msrp), AVG(base_msrp), STDDEV(base_msrp)
FROM products
GROUP BY product_type;



#6.Calculate the Total Number of Customers + Gender in State Using GROUPING SETS

SELECT state, gender, COUNT(*)
FROM customers
GROUP BY GROUPING SETS (
    (state),
    (gender),
    (state,gender)
)
ORDER BY 1,2;


#7.Calculate the Median Price of the Products Table

SELECT percentile_cont(0.5) WITHIN GROUP (ORDER BY base_msrp) AS median
FROM products;


#8.Calculating and Displaying Data Using the HAVING Clause

SELECT state, COUNT(*)
FROM customers
GROUP BY state
HAVING COUNT(*)>=1000
ORDER BY state;


#9.Check How Much Missing Data is in Customers Table

SELECT SUM(CASE WHEN state IS NOT NULL OR state IN ('') THEN 1 ELSE 0 END)::FLOAT/COUNT(*)
    AS missing_data
FROM customers;